// prisma/schema.prisma

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Cart {
  id              Int        @id @default(autoincrement())
  userId          String?
  total           Int
  discountedTotal Int
  totalProducts   Int
  totalQuantity   Int
  secret          String     @default(uuid())
  cartItems       CartItem[]
  status          String     @default("active")
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  expiresAt       DateTime
}

model CartItem {
  id                 Int     @id @default(autoincrement())
  cartId             Int
  productId          Int
  title              String
  price              Int
  quantity           Int
  total              Int
  discountPercentage Int?
  discountedTotal    Int?
  thumbnail          String
  cart               Cart    @relation(fields: [cartId], references: [id])
  product            Product @relation(fields: [productId], references: [id])

  @@unique([cartId, productId])
}

model Product {
  id                   Int        @id @default(autoincrement())
  title                String
  description          String
  category             String
  price                Int
  discountPercentage   Int?
  rating               Float
  stock                Int
  brand                String
  sku                  String
  weight               Int
  dimensions           Dimension  @relation(fields: [dimensionId], references: [id])
  dimensionId          Int
  warrantyInformation  String
  shippingInformation  String
  availabilityStatus   String
  returnPolicy         String
  minimumOrderQuantity Int
  reviews              Review[]
  meta                 Meta       @relation(fields: [metaId], references: [id])
  metaId               Int
  tags                 Tag[]      @relation("ProductTags")
  thumbnail            String
  images               Image[] // Relation with Image model
  CartItem             CartItem[]
}

model Tag {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[] @relation("ProductTags")
}

model Image {
  id        Int     @id @default(autoincrement())
  url       String
  product   Product @relation(fields: [productId], references: [id])
  productId Int
}

model Review {
  id            Int      @id @default(autoincrement())
  rating        Int
  comment       String
  date          DateTime
  reviewerName  String
  reviewerEmail String
  productId     Int
  product       Product  @relation(fields: [productId], references: [id])
}

model Dimension {
  id      Int       @id @default(autoincrement())
  width   Decimal
  height  Decimal
  depth   Decimal
  Product Product[]
}

model Meta {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  barcode   String
  qrCode    String?
  Product   Product[]
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  name      String
  role      Role      @default(USER)
  password  String
  createdAt DateTime  @default(now())
  sessions  Session[]
  active    Boolean
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

enum Role {
  USER
  ADMIN
  SUPERADMIN
}
